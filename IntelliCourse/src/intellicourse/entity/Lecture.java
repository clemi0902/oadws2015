package intellicourse.entity;
// Generated 30.11.2015 15:40:21 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Lecture generated by hbm2java
 */
@Entity
@Table(name="lecture"
    ,catalog="oad_db"
)
public class Lecture  implements java.io.Serializable {


     private Integer lid;
     private Room room;
     private Staff staff;
     private String name;
     private String beschreibung;
     private Date von;
     private Date bis;
     private int preference;
     private Event event;
     private Course course;
     private Set students = new HashSet(0);

    public Lecture() {
    }

        public Lecture(Integer lid, String name, String beschreibung) {
        this.lid = lid;
        this.name = name;
        this.beschreibung = beschreibung;
    }
    public Lecture(String name, String beschreibung) {
        this.name = name;
        this.beschreibung = beschreibung;
    }
	
    public Lecture(Room room, Staff staff, String name, String beschreibung, Date von, Date bis, int preference) {
        this.room = room;
        this.staff = staff;
        this.name = name;
        this.beschreibung = beschreibung;
        this.von = von;
        this.bis = bis;
        this.preference = preference;
    }
    public Lecture(Room room, Staff staff, String name, String beschreibung, Date von, Date bis, int preference, Event event, Course course, Set students) {
       this.room = room;
       this.staff = staff;
       this.name = name;
       this.beschreibung = beschreibung;
       this.von = von;
       this.bis = bis;
       this.preference = preference;
       this.event = event;
       this.course = course;
       this.students = students;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="lid", unique=true, nullable=true)
    public Integer getLid() {
        return this.lid;
    }
    
    public void setLid(Integer lid) {
        this.lid = lid;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="rid", nullable=true)
    public Room getRoom() {
        return this.room;
    }
    
    public void setRoom(Room room) {
        this.room = room;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="uid", nullable=true)
    public Staff getStaff() {
        return this.staff;
    }
    
    public void setStaff(Staff staff) {
        this.staff = staff;
    }

    
    @Column(name="name", nullable=true, length=50)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="beschreibung", nullable=true, length=65535)
    public String getBeschreibung() {
        return this.beschreibung;
    }
    
    public void setBeschreibung(String beschreibung) {
        this.beschreibung = beschreibung;
    }

    @Temporal(TemporalType.TIME)
    @Column(name="von", nullable=true, length=8)
    public Date getVon() {
        return this.von;
    }
    
    public void setVon(Date von) {
        this.von = von;
    }

    @Temporal(TemporalType.TIME)
    @Column(name="bis", nullable=true, length=8)
    public Date getBis() {
        return this.bis;
    }
    
    public void setBis(Date bis) {
        this.bis = bis;
    }

    
    @Column(name="preference", nullable=true)
    public int getPreference() {
        return this.preference;
    }
    
    public void setPreference(int preference) {
        this.preference = preference;
    }

@OneToOne(fetch=FetchType.LAZY, mappedBy="lecture")
    public Event getEvent() {
        return this.event;
    }
    
    public void setEvent(Event event) {
        this.event = event;
    }

@OneToOne(fetch=FetchType.LAZY, mappedBy="lecture")
    public Course getCourse() {
        return this.course;
    }
    
    public void setCourse(Course course) {
        this.course = course;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="student_lecture", catalog="oad_db", joinColumns = { 
        @JoinColumn(name="lid", nullable=true, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="uid", nullable=true, updatable=false) })
    public Set getStudents() {
        return this.students;
    }
    
    public void setStudents(Set students) {
        this.students = students;
    }




}


