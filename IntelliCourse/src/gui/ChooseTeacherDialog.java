/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import intellicourse.entity.User;
import intellicourse.util.HibernateUtil;
import java.util.List;
import java.util.Vector;
import javax.swing.BorderFactory;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import org.hibernate.SQLQuery;
import org.hibernate.Session;
import org.hibernate.transform.Transformers;
import org.hibernate.type.IntegerType;

/**
 *
 * @author Clemens
 */
public class ChooseTeacherDialog extends javax.swing.JDialog {
    private User user = null;
    List<User> resultList = null;
    /**
     * Creates new form ChooseTeacherDialog
     */
    public ChooseTeacherDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        tfUsername.getDocument().addDocumentListener(new MyDocumentListener());
        tfFirstname.getDocument().addDocumentListener(new MyDocumentListener());
        tfLastname.getDocument().addDocumentListener(new MyDocumentListener());
    }

    public User showTeachers()
    {
        displayData();
        this.setVisible(true);
        return user;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbTeachers = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        tfUsername = new javax.swing.JTextField();
        tfFirstname = new javax.swing.JTextField();
        tfLastname = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jScrollPane1.setViewportView(tbTeachers);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.setLayout(new java.awt.GridLayout());

        jButton1.setText("Ok");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        jPanel2.setLayout(new java.awt.GridLayout());

        tfUsername.setBorder(BorderFactory.createTitledBorder("Filter Username:"));
        jPanel2.add(tfUsername);

        tfFirstname.setBorder(BorderFactory.createTitledBorder("Filter First Name:"));
        jPanel2.add(tfFirstname);

        tfLastname.setBorder(BorderFactory.createTitledBorder("Filter Last Name:"));
        jPanel2.add(tfLastname);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int index = tbTeachers.getSelectedRow();
        user = resultList.get(index);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void displayData() {
        String sql;
        if (tfUsername.getText().trim().equals("") && tfFirstname.getText().trim().equals("") && tfLastname.getText().trim().equals("")) {
            sql = "select u.uid, u.username, u.password, u.vorname, u.nachname from  User  u inner join staff s USING(uid)";
        } else
            sql = "select u.uid, u.username, u.password, u.vorname, u.nachname from  User  u inner join staff s USING(uid) "
                    + "WHERE UPPER(u.username) LIKE '" + tfUsername.getText().trim().toUpperCase() + "%' "
                    + "AND UPPER(u.vorname) LIKE '" + tfFirstname.getText().trim().toUpperCase() + "%' "
                    + "AND UPPER(u.nachname) LIKE '" + tfLastname.getText().trim().toUpperCase() + "%'";
        
        executeQuery(sql);
    }

    private void executeQuery(String query) {
        try {
            Session session = HibernateUtil.getSessionFactory().openSession();
            session.beginTransaction();
            SQLQuery q = session.createSQLQuery(query);
            q.addScalar("uid",new IntegerType());
            q.addScalar("username",new org.hibernate.type.StringType());
            q.addScalar("vorname",new org.hibernate.type.StringType());
            q.addScalar("nachname",new org.hibernate.type.StringType());
            q.addScalar("password",new org.hibernate.type.StringType());
            q.setResultTransformer(Transformers.aliasToBean(User.class));
            resultList = q.list();
            displayResult(resultList);
            session.getTransaction().commit();
            session.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void displayResult(List resultList) {
        Vector<String> tableHead = new Vector<String>();
        Vector tableData = new Vector();
        tableHead.add("uid");
        tableHead.add("Username");
        tableHead.add("First Name");
        tableHead.add("Last Name");
        tableHead.add("Password");
        
        for (Object o : resultList) {
            User user = new User();
            
            User u = (User) o;
            Vector<Object> row = new Vector<>();
            row.add(u.getUid());
            row.add(u.getUsername());
            row.add(u.getVorname());
            row.add(u.getNachname());
            row.add(u.getPassword());
            tableData.add(row);
        }
        tbTeachers.setModel(new DefaultTableModel(tableData, tableHead));

    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChooseTeacherDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChooseTeacherDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChooseTeacherDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChooseTeacherDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ChooseTeacherDialog dialog = new ChooseTeacherDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    
    private class MyDocumentListener implements DocumentListener {

        @Override
        public void insertUpdate(DocumentEvent e) {
            ChooseTeacherDialog.this.displayData();
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            ChooseTeacherDialog.this.displayData();
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
            ChooseTeacherDialog.this.displayData();
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbTeachers;
    private javax.swing.JTextField tfFirstname;
    private javax.swing.JTextField tfLastname;
    private javax.swing.JTextField tfUsername;
    // End of variables declaration//GEN-END:variables
}
